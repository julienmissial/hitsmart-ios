//
//  Messages.h
//  HitSmart
//
//  Created by Patrick Shickel on 9/20/15.
//  Copyright Â© 2015 Nordic Semiconductor. All rights reserved.
//

#ifndef Messages_h
#define Messages_h

///////////////////////////////////////////////////////////////////
// MessageID_e                                                   //
///////////////////////////////////////////////////////////////////
typedef enum
{
    LEFT = 0,
    RIGHT
    
} GloveID_e;


///////////////////////////////////////////////////////////////////
// MessageID_e                                                   //
///////////////////////////////////////////////////////////////////
typedef enum
{
    GLOVE_STATUS = 0,
    HIT_DATA,
    START_SESSION,
    END_SESSION,
    
} MessageID_e;


///////////////////////////////////////////////////////////////////
// timestamp_s                                                   //
///////////////////////////////////////////////////////////////////
typedef struct
{
    unsigned int major;
    unsigned int minor;
    
} Timestamp_s;


///////////////////////////////////////////////////////////////////
// Direction_s                                                   //
///////////////////////////////////////////////////////////////////
typedef struct
{
    signed int x;
    signed int y;
    signed int z;
    
} Direction_s;


///////////////////////////////////////////////////////////////////
// MsgHeader_s                                                   //
///////////////////////////////////////////////////////////////////
typedef struct
{
    MessageID_e   msgID;
    Timestamp_s   time;
    unsigned int dataLength;
    
} MsgHeader_s;


///////////////////////////////////////////////////////////////////
// GloveStatusData_s                                             //
///////////////////////////////////////////////////////////////////
typedef struct
{
    GloveID_e     gloveID;
    unsigned int  heartRate;
    unsigned int  batteryState;
    
} GloveStatusData_s;


///////////////////////////////////////////////////////////////////
// GloveStatusMessage                                            //
///////////////////////////////////////////////////////////////////
typedef struct
{
    MsgHeader_s       header;
    GloveStatusData_s data;
    
} GloveStatusMessage;


///////////////////////////////////////////////////////////////////
// HitData_s                                                     //
///////////////////////////////////////////////////////////////////
typedef struct
{
    GloveID_e    gloveID;
    unsigned int force;
    Direction_s  direction;
    
} HitData_s;


///////////////////////////////////////////////////////////////////
// HitDataMessage                                                //
///////////////////////////////////////////////////////////////////
typedef struct
{
    MsgHeader_s header;
    HitData_s   data;
    
} HitDataMessage;


///////////////////////////////////////////////////////////////////
// StartSessionData_s                                            //
///////////////////////////////////////////////////////////////////
typedef struct
{
    // no data for now
} StartSessionData_s;


///////////////////////////////////////////////////////////////////
// StartSessionMessage                                           //
///////////////////////////////////////////////////////////////////
typedef struct
{
    MsgHeader_s        header;
    StartSessionData_s data;
    
} StartSessionMessage;


///////////////////////////////////////////////////////////////////
// EndSessionData_s                                              //
///////////////////////////////////////////////////////////////////
typedef struct
{
    // no data for now
} EndSessionData_s;


///////////////////////////////////////////////////////////////////
// EndSessionMessage                                             //
///////////////////////////////////////////////////////////////////
typedef struct
{
    MsgHeader_s      header;
    EndSessionData_s data;
    
} EndSessionMessage;


#endif /* Messages_h */
